apiVersion: v1
kind: Namespace
metadata:
  name: mastodon

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mastodon
  namespace: mastodon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mastodon
  template:
    metadata:
      labels:
        app: mastodon
    spec:
      containers:
        - image: tootsuite/mastodon:v4.1.4
          name: mastodon-web
          command: [ bash, -c, "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000" ]
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: env
            - secretRef:
                name: env
          volumeMounts:
            - mountPath: /config
              name: volume
            - mountPath: /opt/mastodon/public/system
              name: media
        - image: tootsuite/mastodon:v4.1.4
          name: mastodon-streaming
          command: [ node, ./streaming ]
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: env
            - secretRef:
                name: env
          volumeMounts:
            - mountPath: /config
              name: volume
            - mountPath: /opt/mastodon/public/system
              name: media
        - image: tootsuite/mastodon:v4.1.4
          name: mastodon-side
          command: [ bundle, exec, sidekiq ]
          envFrom:
            - configMapRef:
                name: env
            - secretRef:
                name: env
          volumeMounts:
            - mountPath: /config
              name: volume
            - mountPath: /opt/mastodon/public/system
              name: media
      volumes:
        - name: volume
          hostPath:
            path: /home/comame/mastodon
        - name: media
          hostPath:
            path: /home/comame/mastodon-media

---

apiVersion: v1
kind: Service
metadata:
  name: mastodon
  namespace: mastodon
spec:
  ports:
   - name: web
     port: 3000
     targetPort: 3000
     protocol: TCP
   - name: streaming
     port: 4000
     targetPort: 4000
     protocol: TCP
  selector:
    app: mastodon

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: env
  namespace: mastodon
data:
  LOCAL_DOMAIN: mastodon.comame.xyz
  SINGLE_USER_MODE: 'false'
  DB_HOST: postgres.comame.dev
  DB_PORT: '5432'
  DB_NAME: mastodon
  REDIS_HOST: redis.comame.dev
  REDIS_PORT: '6379'
  REDIS_PASSWORD:
  REDIS_NAMESPACE: mastodon.comame.xyz
  ES_ENABLED: 'false'
  ES_HOST: elasticsearch.comame.dev
  ES_PORT: '9200'
  SMTP_SERVER: localhost
  SMTP_PORT: '25'
  SMTP_AUTH_METHOD: none
  SMTP_OPENSSL_VERIFY_MODE: none
  SMTP_ENABLE_STARTTLS: auto
  SMTP_FROM_ADDRESS: Mastodon <notifications@mastodon.comame.xyz>
  OIDC_ENABLED: 'true'
  OIDC_DISPLAY_NAME: accounts.comame.xyz
  OIDC_ISSUER: https://accounts.comame.xyz
  OIDC_REDIRECT_URI: https://mastodon.comame.xyz/auth/auth/openid_connect/callback
  OIDC_DISCOVERY: 'true'
  OIDC_SCOPE: openid,email,profile
  OIDC_UID_FIELD: sub
  OIDC_CLIENT_ID: mastodon
  OIDC_SECURITY_ASSUME_EMAIL_IS_VARIFIED: 'yes'
  OMNIAUTH_ONLY: 'true'
