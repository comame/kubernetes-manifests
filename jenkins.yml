apiVersion: v1
kind: Namespace
metadata:
  name: jenkins

---
# Service account for Deploying

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins-deploy
rules:
  - verbs:
      - get
      - update
      - patch
    apiGroups:
      - apps
    resources:
      - deployments

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-deploy
  namespace: jenkins

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-deploy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins-deploy
subjects:
- kind: ServiceAccount
  name: jenkins-deploy
  namespace: jenkins

---
apiVersion: v1
kind: Secret
metadata:
  name: deploy-service-account
  namespace: jenkins
  annotations:
    kubernetes.io/service-account.name: "jenkins-deploy"
type: kubernetes.io/service-account-token

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-server
  template:
    metadata:
      labels:
        app: jenkins-server
    spec:
      containers:
        - name: jenkins
          image: jenkins/jenkins:lts
          resources:
          ports:
            - name: httpport
              containerPort: 8080
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home
      volumes:
        - name: jenkins-data
          hostPath:
            path: /home/comame/jenkins

---

apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: jenkins
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path:   /
      prometheus.io/port:   '8080'
spec:
  selector:
    app: jenkins-server
  ports:
    - port: 8080
      targetPort: 8080
